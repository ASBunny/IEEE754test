/*Подключаем библиотеки для работы с программой*/
#include "pch.h"
#include <iostream>
#include <fstream>
#include <iostream>
#include <sstream>
#include <bitset>
#include <fstream>
#include <iostream>
#include <cstdlib>

using namespace std;
//Функция записи числа в бинарный файл inBin(ваше число, "называние файла")
void inBin(float a,string s){

	ofstream out(s, ios::binary); //создаём поток в бинарный файл
	out.write((char*)&a, sizeof(a)); //записываем в бинарный файл
	out.close(); // закрываем поток(чтобы небыло мусора и всё незабагалось)
}
//Функция чтения  бинарного файла с выводом на консоль числа в битовом представлении outBin("название файла")
void outBin(string s){
	ifstream ifs(s, ios::binary);// содали поток из бинарного файла
	ostringstream oss;  //создаём вспомогательный объект класса ostringstream для преобразования данных из потока в строковый вид
	string str, str1; 
	unsigned char n; //переменная для посимвольного чтения(присваивается каждый новый символ в цикле)
	str1 = "";
	while (true)  
	{
		ifs.read((char *)&n, 1);//посимвольно считываем поток  (1 байт = 8 бит = 1символ)
		if (ifs.eof())    //пока не достигнут конец - читаем, иначе ливаем с цикла
			break;
		oss << bitset<8>(n);  //извлекаем первый байт, тоесть первые 8 бит - с помощью контейнера bitset для хранения битов
		str = oss.str();  //преобразуем в строковый вид наши биты  с помощью метода str()
		str1 = str + str1; //строим последовательность битов в строку(конкатенация строк)
		oss.str(""); //обнуляем наш потоковый объект для записи следующих 8 бит
	}
	cout << str1 << endl; 
	ifs.close(); 

}
//Сравнение отрицательного и положительного нуля("п.с. они равны")
void eql(double a, double b) {
	if (a == b)  cout << "0 and -0 are equal";
	else cout << "not equal";
}
//Получение  нуля(чтобы получить -0 введите параметр -1. Чтобы получить 0 введите параметр 1) 
double Null(int a) {
	double x=1.0;
	double y=1.0;
	double z=0.0;
	if(a==1) return x / (y/z);
	else if (a==-1) return -1*x / (y/z); //Тут всё очевидно:)
}

void main()
{	
	setlocale(LC_ALL, "rus");
	double a = Null(1);
	double b = Null(-1);
	cout << "Получен положительный ноль - > ";
	cout << a << endl;
	cout << "Получен отрицательный ноль - > ";
	cout << b << endl;
	inBin(a, "out1.dat");//записываем положительный ноль в бинарный файл
	inBin(b, "out2.dat");//записываем отрицательный ноль в бинарный файл
	cout << "Битовое представление положительного нуля -> ";
	outBin("out1.dat"); //выводим из файла  положительный ноль в битовом представлении
	cout << "Битовое представление отрицательного нуля -> ";
	outBin("out2.dat"); //выводим из файла  отрицательный ноль в битовом представлении
	
}
